// <auto-generated />
#nullable enable
namespace WebApi.Models
{
    public partial class RideFilterMapper
    {
        private partial void MapToDbFilter(global::WebApi.Models.ControllersModels.RideControllerModels.RideFilter src, global::WebApi.Models.RideDbFilter target)
        {
            if (src.DeparturePoint != null)
            {
                target.DeparturePoint = (global::NetTopologySuite.Geometries.Point)src.DeparturePoint.Value;
            }
            else
            {
                target.DeparturePoint = null;
            }
            if (src.ArrivalPoint != null)
            {
                target.ArrivalPoint = (global::NetTopologySuite.Geometries.Point)src.ArrivalPoint.Value;
            }
            else
            {
                target.ArrivalPoint = null;
            }
            if (src.AvailableStatuses != null)
            {
                target.AvailableStatuses = MapToInt32Array1(src.AvailableStatuses);
            }
            else
            {
                target.AvailableStatuses = null;
            }
            target.Offset = src.Offset;
            target.Limit = src.Limit;
            target.SortType = src.SortType;
            target.SortDirection = src.SortDirection;
            target.DeparturePointSearchRadiusKilometers = src.DeparturePointSearchRadiusKilometers;
            target.ArrivalPointSearchRadiusKilometers = src.ArrivalPointSearchRadiusKilometers;
            target.MinDepartureTime = src.MinDepartureTime;
            target.MaxDepartureTime = src.MaxDepartureTime;
            target.MinArrivalTime = src.MinArrivalTime;
            target.MaxArrivalTime = src.MaxArrivalTime;
            target.MinPriceInRub = src.MinPriceInRub;
            target.MaxPriceInRub = src.MaxPriceInRub;
            target.FreeSeatsCount = src.FreeSeatsCount;
            target.PaymentMethods = src.PaymentMethods;
            target.ValidationMethods = MapToInt32Array(src.ValidationMethods);
        }

        private int[] MapToInt32Array(global::System.Collections.Generic.IReadOnlyList<global::WebApi.Models.RideValidationMethod> source)
        {
            var target = new int[source.Count];
            var i = 0;
            foreach (var item in source)
            {
                target[i] = (int)item;
                i++;
            }
            return target;
        }

        private int[] MapToInt32Array1(global::System.Collections.Generic.IReadOnlyList<global::WebApi.Models.RideStatus> source)
        {
            var target = new int[source.Count];
            var i = 0;
            foreach (var item in source)
            {
                target[i] = (int)item;
                i++;
            }
            return target;
        }
    }
}