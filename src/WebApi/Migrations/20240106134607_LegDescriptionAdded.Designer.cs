// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.DataAccess;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240106134607_LegDescriptionAdded")]
    partial class LegDescriptionAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Models.Leg", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("empty");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Point>("From")
                        .IsRequired()
                        .HasColumnType("geography (point)");

                    b.Property<int>("PriceInRub")
                        .HasColumnType("integer");

                    b.Property<Guid>("RideId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Point>("To")
                        .IsRequired()
                        .HasColumnType("geography (point)");

                    b.HasKey("Id");

                    b.HasIndex("EndTime");

                    b.HasIndex("From");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("From"), "GIST");

                    b.HasIndex("RideId");

                    b.HasIndex("StartTime");

                    b.HasIndex("To");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("To"), "GIST");

                    b.ToTable("Legs");
                });

            modelBuilder.Entity("WebApi.Models.Ride", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("DriverId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Rides");
                });

            modelBuilder.Entity("WebApi.Models.Leg", b =>
                {
                    b.HasOne("WebApi.Models.Ride", "Ride")
                        .WithMany()
                        .HasForeignKey("RideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ride");
                });
#pragma warning restore 612, 618
        }
    }
}
